def solution(edges):
    last = max(max(e) for e in edges)
    
    to = [[] for _ in range(last + 1)]
    fr = [[] for _ in range(last + 1)]
    
    for edge in edges:
        to[edge[1]].append(edge[0])
        fr[edge[0]].append(edge[1])
    
    created = 0
    stick_start = []
    eight_start = []
    for i in range(1, last + 1):
        len_to = len(to[i])
        len_from = len(fr[i])
        if len_to == 0:
            if len_from >= 2: # 생성한 정점
                created = i
        if len_to >= 2 and len_from == 2: # 8자 교차점 (전부)
            eight_start.append(i)
        if len_to >= 1 and len_from == 0: # 막대 끝점
            stick_start.append(i)
    
    len_stick = len(stick_start)
    len_eight = len(eight_start)
    num_of_dounuts = len(fr[created]) - len_stick - len_eight
    
    return [created, num_of_dounuts, len_stick, len_eight]